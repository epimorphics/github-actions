name: 'Ansible Deploy'
description: "Limited Deployment via Ansible"
inputs:
  aws-profile:
    description: 'AWS Profile'
    required: false
    default: 'aws'
  path:
    description: 'Ansible Repoistory Path'
    required: false
    default: 'ansible'
  playbook:
    description: 'Ansible Playbook'
    required: false
    default: 'apps.yml'
  stage:
    description: 'Envivonment/Stage to deploy'
    required: true
  name:
    description: 'tag/image version to deploy'
    required: true
  secret:
    description: 'Ansible Vault Secret'
    required: true
  vault-secret-file:
    description: 'Ansible Vault Secret file'
    required: false
    default: .secret/default
  version:
    description: 'tag/image version to deploy'
    required: true
runs:
  using: "composite"
  steps: 
    - name: Ansible Deploy
      shell: bash
      run: | 
        cd ${{ inputs.path }}
        ansible-inventory --graph
        mkdir -p $(dirname ${{ inputs.vault-secret-file }})
        echo ${{ inputs.secret }} > ${{ inputs.vault-secret-file }}
        chmod 600 ${{ inputs.vault-secret-file }}
        [ -f requirements.yml ] && ansible-galaxy collection install -r requirements.yml
        echo "Updating ${{ inputs.name }} to ${{ inputs.version }} for ${{ inputs.stage }} ..."
        for i in $(echo ${{ inputs.stage }}| tr , ' ')
        do
          sed -i -e 's/  \(${{ inputs.name }}\): .*$/  \1: ${{ inputs.version }}/' group_vars/$i/tags.yml
          echo "=============================================================================="
          echo group_vars/$i/tags.yml
          echo "------------------------------------------------------------------------------"
          cat  group_vars/$i/tags.yml
        done
        CMD='ansible-playbook -l ${{ inputs.stage }} -t aws,elb,${{ inputs.name }}_image ${{ inputs.playbook }}'
        echo "=============================================================================="
        echo $CMD
        echo "=============================================================================="
        AWS_PROFILE=${{ inputs.aws-profile }} $CMD
